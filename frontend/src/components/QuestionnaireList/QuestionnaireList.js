import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './QuestionnaireList.scss';

const QuestionnaireList = ({ refresh, setRefresh }) => {
  const [questionnaires, setQuestionnaires] = useState([]);
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [totalQuestionnaires, setTotalQuestionnaires] = useState(0);
  const navigate = useNavigate();
  const limit = 5; // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–ø–∏—Ç—É–≤–∞–Ω—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É

  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–ø–∏—Å–æ–∫ –æ–ø–∏—Ç—É–≤–∞–Ω—å –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
  useEffect(() => {
    fetch(
      `http://localhost:5000/api/questionnaires?page=${page}&limit=${limit}`
    )
      .then((response) => response.json())
      .then(({ data, total }) => {
        setQuestionnaires(Array.isArray(data) ? data : []);
        setTotalPages(Math.ceil(total / limit));
        setTotalQuestionnaires(total); // Update totalQuestionnaires
      })
      .catch((error) => console.error('–ü–æ–º–∏–ª–∫–∞:', error));
  }, [page, refresh, totalPages]);

  // –í–∏–¥–∞–ª–µ–Ω–Ω—è –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è
  const deleteQuestionnaire = (id) => {
    fetch(`http://localhost:5000/api/questionnaires/${id}`, {
      method: 'DELETE',
    })
      .then(() => {
        setTotalQuestionnaires((prev) => prev - 1);
        setTotalPages((prev) => Math.max(1, Math.ceil((totalQuestionnaires - 1) / limit))); // –ü–µ—Ä–µ—Ä–∞—Ö–æ–≤—É—î–º–æ totalPages

        // –Ø–∫—â–æ —Ü–µ –æ—Å—Ç–∞–Ω–Ω—î –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—é
        setPage((prev) =>
          questionnaires.length === 1 && prev > 1 ? prev - 1 : prev
        );
        setQuestionnaires((prev) => prev.filter((q) => q.id !== id)); // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –æ–ø–∏—Ç—É–≤–∞–Ω—å

        // –§–æ—Ä—Å—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É
        setTimeout(() => setRefresh((prev) => !prev), 0);
      })
      .catch((error) => console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ:', error));
  };

  return (
    <div>
      <h1>–ö–∞—Ç–∞–ª–æ–≥ –æ–ø–∏—Ç—É–≤–∞–Ω—å</h1>
      <ul className='questionnaire-list'>
        {questionnaires.length === 0 ? (
          <p>–û–ø–∏—Ç—É–≤–∞–Ω—å —â–µ –Ω–µ–º–∞—î.</p>
        ) : (
          questionnaires.map((q) => (
            <li
              className='questionnaire-list__item'
              key={q.id}
            >
              <strong>{q.name}</strong> {q.description}
              <p className='questionnaire-list__item-title'>
                –ó–∞–ø–∏—Ç–∞–Ω—å: {JSON.parse(q.questions).length} | –ü—Ä–æ—Ö–æ–¥–∂–µ–Ω—å:{' '}
                {q.completions}
              </p>
              <div className='questionnaire-list__item-actions'>
                <button onClick={() => navigate(`/take/${q.id}`)}>‚ñ∂</button>
                <button onClick={() => navigate(`/edit/${q.id}`)}>‚úè</button>
                <button
                  className='questionnaire-list__item-actions--delete'
                  onClick={() => deleteQuestionnaire(q.id)}
                >
                  üóë
                </button>
              </div>
            </li>
          ))
        )}
      </ul>

      {/* –ü–æ–∫–∞–∑—É—î–º–æ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –±—ñ–ª—å—à–µ `limit` –æ–ø–∏—Ç—É–≤–∞–Ω—å */}
      {totalQuestionnaires > limit && (
        <div>
          <button
            disabled={page === 1}
            onClick={() => setPage((prev) => Math.max(1, prev - 1))}
          >
            ‚¨Ö –ü–æ–ø–µ—Ä–µ–¥–Ω—è
          </button>
          <span>
            {' '}
            –°—Ç–æ—Ä—ñ–Ω–∫–∞ {page} —ñ–∑ {totalPages}{' '}
          </span>
          <button
            disabled={page >= totalPages}
            onClick={() => setPage((prev) => Math.min(totalPages, prev + 1))}
          >
            ‚û° –ù–∞—Å—Ç—É–ø–Ω–∞
          </button>
        </div>
      )}
    </div>
  );
};

export default QuestionnaireList;
